<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AI-Fundamental</title>
  
  <subtitle>Learning AI is not so hard.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ai-fundamental.github.io/"/>
  <updated>2017-11-13T03:37:32.154Z</updated>
  <id>https://ai-fundamental.github.io/</id>
  
  <author>
    <name>Ping Luo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The knowledge graph of the third course part: Learning</title>
    <link href="https://ai-fundamental.github.io/2017/The%20knowledge%20graph%20of%20the%20third%20course%20part%20Learning/"/>
    <id>https://ai-fundamental.github.io/2017/The knowledge graph of the third course part Learning/</id>
    <published>2017-12-31T08:00:00.000Z</published>
    <updated>2017-11-13T03:37:32.154Z</updated>
    
    <content type="html"><![CDATA[<p>To view the whole knowledge graph.</p><ul><li>click <a href="/assets/机器学习课程.svg">here</a> for Chinese version.</li><li>click <a href="/assets/Machine_Learning_Course.svg">here</a> for English version.</li></ul><p><a href="/assets/Machine_Learning_Course.svg"><img src="/assets/Machine_Learning_Course.png" alt="TestSVG"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;To view the whole knowledge graph.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;click &lt;a href=&quot;/assets/机器学习课程.svg&quot;&gt;here&lt;/a&gt; for Chinese version.&lt;/li&gt;
&lt;li&gt;click &lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="knowledge graph" scheme="https://ai-fundamental.github.io/tags/knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>Homework 3 on Knowledge</title>
    <link href="https://ai-fundamental.github.io/2017/Homework%203%20on%20Knowledge/"/>
    <id>https://ai-fundamental.github.io/2017/Homework 3 on Knowledge/</id>
    <published>2017-11-13T08:00:00.000Z</published>
    <updated>2017-11-13T03:28:30.705Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h3><p>This assignment should be finished with <code>Prolog</code>.</p><h3 id="Question-I"><a href="#Question-I" class="headerlink" title="Question I"></a>Question I</h3><blockquote><p>Given a set, list all its elements.<br>给出一个集合，列出其所有元素     </p></blockquote><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* using MS Windows GUN prolog（gprolog）</span></div><div class="line"><span class="comment">query ：mymember(X,[1,2,3,4,5]). */</span></div><div class="line"></div><div class="line">mymember(<span class="symbol">X</span>,[<span class="symbol">_</span>|<span class="symbol">Y</span>]):- mymember(<span class="symbol">X</span>,<span class="symbol">Y</span>).</div><div class="line">mymember(<span class="symbol">X</span>,[<span class="symbol">X</span>|<span class="symbol">_</span>]).</div></pre></td></tr></table></figure><p>(Thanks to Shiyu Wu)</p><h3 id="Question-II"><a href="#Question-II" class="headerlink" title="Question II"></a>Question II</h3><blockquote><p>Given a set, list all its subsets.<br>给出一个集合，列出其所有子集     </p></blockquote><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* gprolog</span></div><div class="line"><span class="comment">Supposing the subset is in order.</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">EXAMPLE:</span></div><div class="line"><span class="comment">| ?- subset([2,3],[1,2,3]).</span></div><div class="line"><span class="comment">true ? </span></div><div class="line"><span class="comment">yes </span></div><div class="line"><span class="comment">| ?- subset(X,[1,2,3]).</span></div><div class="line"><span class="comment">X = [1,2,3] ? ;</span></div><div class="line"><span class="comment">X = [1,2] ? ;</span></div><div class="line"><span class="comment">X = [1,3] ? ;</span></div><div class="line"><span class="comment">X = [1] ? ;</span></div><div class="line"><span class="comment">X = [2,3] ? ;</span></div><div class="line"><span class="comment">X = [2] ? ;</span></div><div class="line"><span class="comment">X = [3] ? ;</span></div><div class="line"><span class="comment">X = [] ? ;</span></div><div class="line"><span class="comment">*/</span></div><div class="line"></div><div class="line">subset([],[]).</div><div class="line">subset([<span class="symbol">A</span>|<span class="symbol">B</span>],[<span class="symbol">A</span>|<span class="symbol">C</span>]):- subset(<span class="symbol">B</span>,<span class="symbol">C</span>).</div><div class="line">subset(<span class="symbol">A</span>,[<span class="symbol">_</span>|<span class="symbol">B</span>]):- subset(<span class="symbol">A</span>,<span class="symbol">B</span>).</div></pre></td></tr></table></figure><p>(Thanks to Pan Shi)</p><h3 id="Related-Prolog-grammar-brief-explanation"><a href="#Related-Prolog-grammar-brief-explanation" class="headerlink" title="Related Prolog grammar: brief explanation"></a>Related Prolog grammar: brief explanation</h3><p><strong> 匿名变量 <code>_</code> </strong><br>prolog中，变量由大写字母或下划线 <code>_</code> 开头。<br>匿名变量 <code>_</code> 不会绑定为任何值，所以也不要求它所出现的位置的值必须相同。    </p><p><strong> 列表表达 <code>|</code> </strong><br>Prolog提供了把表头项目以及除去表头项目后剩下的列表分离的方法。<br>其次，Prolog强大的递归功能可以方便地访问除去表头项目后的列表。<br>如：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[X | Y]</div></pre></td></tr></table></figure></p><p>使用此列表可以与任意的列表匹配，匹配成功后，X绑定为列表的第一个项目的值，<br>我们称之为表头（head）。而Y则绑定为剩下的列表，我们称之为表尾（tail)，举例说明：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">?- [<span class="symbol">H</span>|<span class="symbol">T</span>] = [apple, broccoli, refrigerator].</div><div class="line"><span class="symbol">H</span> = apple </div><div class="line"><span class="symbol">T</span> = [broccoli, refrigerator] </div><div class="line"></div><div class="line">?- [<span class="symbol">H</span>|<span class="symbol">T</span>] = [a, b, c, d, e].</div><div class="line"><span class="symbol">H</span> = a</div><div class="line"><span class="symbol">T</span> = [b, c, d, e] </div><div class="line"></div><div class="line">?- [<span class="symbol">H</span>|<span class="symbol">T</span>] = [apples, bananas].</div><div class="line"><span class="symbol">H</span> = apples </div><div class="line"><span class="symbol">T</span> = [bananas]</div><div class="line"></div><div class="line">?- [<span class="symbol">H</span>|<span class="symbol">T</span>] = [a, [b,c,d]]. <span class="comment">/* 这个例子中的第一层列表有两个项目。*/</span></div><div class="line"><span class="symbol">H</span> = a </div><div class="line"><span class="symbol">T</span> = [[b, c, d]] </div><div class="line"></div><div class="line">?- [<span class="symbol">H</span>|<span class="symbol">T</span>] = [apples]. <span class="comment">/*列表中只有一个项目的情况 */</span></div><div class="line"><span class="symbol">H</span> = apples</div><div class="line"><span class="symbol">T</span> = []</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Foreword&quot;&gt;&lt;a href=&quot;#Foreword&quot; class=&quot;headerlink&quot; title=&quot;Foreword&quot;&gt;&lt;/a&gt;Foreword&lt;/h3&gt;&lt;p&gt;This assignment should be finished with &lt;code&gt;
      
    
    </summary>
    
    
      <category term="homework" scheme="https://ai-fundamental.github.io/tags/homework/"/>
    
  </entry>
  
  <entry>
    <title>The knowledge graph of the second course part: Knowledge</title>
    <link href="https://ai-fundamental.github.io/2017/The%20knowledge%20graph%20of%20the%20second%20course%20part%20Knowledge/"/>
    <id>https://ai-fundamental.github.io/2017/The knowledge graph of the second course part Knowledge/</id>
    <published>2017-10-30T08:00:00.000Z</published>
    <updated>2017-11-13T03:38:11.277Z</updated>
    
    <content type="html"><![CDATA[<p>click <a href="/assets/Knowledge.svg">here</a> for viewing <a href="/assets/Knowledge.svg">the whole knowledge graph</a>.<br><a href="/assets/Knowledge.svg"><img src="/assets/Knowledge.png" alt="TestSVG"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;click &lt;a href=&quot;/assets/Knowledge.svg&quot;&gt;here&lt;/a&gt; for viewing &lt;a href=&quot;/assets/Knowledge.svg&quot;&gt;the whole knowledge graph&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;/as
      
    
    </summary>
    
    
      <category term="knowledge graph" scheme="https://ai-fundamental.github.io/tags/knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>Homework 2 on Knowledge</title>
    <link href="https://ai-fundamental.github.io/2017/Homework%202%20on%20Knowledge/"/>
    <id>https://ai-fundamental.github.io/2017/Homework 2 on Knowledge/</id>
    <published>2017-10-23T08:00:00.000Z</published>
    <updated>2017-10-23T05:35:23.099Z</updated>
    
    <content type="html"><![CDATA[<p>We give the detailed answer to Exercise 7.17 in the book of AIMA.</p><p><strong>7.17</strong> A propositional 2-CNF expression is a conjunction of clauses, each containing <em>exactly</em> 2 literals, e.g.,<br>$$(A \lor B) \land (\lnot A \lor C) \land (\lnot B \lor D) \land (\lnot C \lor G) \land (\lnot D \lor G)$$</p><p><strong>a</strong>. Prove using resolution that the above sentence entails G.<br><strong>b</strong>. Two clauses are <em>semantically distinct</em> if they are not logically equivalent. How many semantically distinct 2-CNF clauses can be constructed from n proposition symbols?<br><strong>c</strong>. Using your answer to (b), prove that propositional resolution always terminates in time polynomial in n given a 2-CNF sentence containing no more than n distinct symbols.<br><strong>d</strong>. Explain why your argument in (c) does not apply to 3-CNF. </p><p>详细的证明请见 <a href="/assets/2015K8009929049_冯吕_07.pdf">pdf</a>.<br>(Thanks to Lv Feng.)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;We give the detailed answer to Exercise 7.17 in the book of AIMA.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.17&lt;/strong&gt; A propositional 2-CNF expression is a conj
      
    
    </summary>
    
    
      <category term="homework" scheme="https://ai-fundamental.github.io/tags/homework/"/>
    
  </entry>
  
  <entry>
    <title>Homework 1 on Knowledge</title>
    <link href="https://ai-fundamental.github.io/2017/Homework%201%20on%20Knowledge/"/>
    <id>https://ai-fundamental.github.io/2017/Homework 1 on Knowledge/</id>
    <published>2017-10-14T08:00:00.000Z</published>
    <updated>2017-10-18T05:36:09.169Z</updated>
    
    <content type="html"><![CDATA[<p>陆钟万先生编写的《面向计算机科学的数理逻辑》是数理逻辑方面的经典教材。<br>本次作业，利用课本讲授的包含11条推演规则的命题逻辑系统，以形式推演的方式证明了课本中的</p><ul><li>定理2.6.4</li><li>定理2.6.9</li></ul><p>详细的证明请见 <a href="/assets/2015K8009929046_王荣庆_06.pdf">pdf</a>.<br>(Thanks to Rongqing Wang.)</p><p>向陆钟万先生致敬！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;陆钟万先生编写的《面向计算机科学的数理逻辑》是数理逻辑方面的经典教材。&lt;br&gt;本次作业，利用课本讲授的包含11条推演规则的命题逻辑系统，以形式推演的方式证明了课本中的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定理2.6.4&lt;/li&gt;
&lt;li&gt;定理2.6.9&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详
      
    
    </summary>
    
    
      <category term="homework" scheme="https://ai-fundamental.github.io/tags/homework/"/>
    
  </entry>
  
  <entry>
    <title>The knowledge graph of the first course part: Search</title>
    <link href="https://ai-fundamental.github.io/2017/The%20knowledge%20graph%20of%20the%20first%20course%20part%20Search/"/>
    <id>https://ai-fundamental.github.io/2017/The knowledge graph of the first course part Search/</id>
    <published>2017-09-28T08:00:00.000Z</published>
    <updated>2017-11-13T03:38:05.645Z</updated>
    
    <content type="html"><![CDATA[<p>click <a href="/assets/Search.km.svg">here</a> for viewing <a href="/assets/Search.km.svg">the whole knowledge graph</a>.<br><a href="/assets/Search.km.svg"><img src="/assets/Search.km.png" alt="TestSVG"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;click &lt;a href=&quot;/assets/Search.km.svg&quot;&gt;here&lt;/a&gt; for viewing &lt;a href=&quot;/assets/Search.km.svg&quot;&gt;the whole knowledge graph&lt;/a&gt;.&lt;br&gt;&lt;a href=&quot;/as
      
    
    </summary>
    
    
      <category term="knowledge graph" scheme="https://ai-fundamental.github.io/tags/knowledge-graph/"/>
    
  </entry>
  
  <entry>
    <title>Homework 3 on Search</title>
    <link href="https://ai-fundamental.github.io/2017/Homework%203%20on%20Search/"/>
    <id>https://ai-fundamental.github.io/2017/Homework 3 on Search/</id>
    <published>2017-09-16T08:00:00.000Z</published>
    <updated>2017-10-10T07:41:04.516Z</updated>
    
    <content type="html"><![CDATA[<p>We provide a formal proof on the correctness of NegaScout, which cannot be found in other places of Web.</p><p>We also find that we can also perform the scout step even for the first child of a node. It means that the constraint on the “first action” (see Line 6 of the algorithm in the <a href="/assets/2015K8009929046_王荣庆_04.pdf">pdf</a>) is <strong>NOT</strong> necessary. It is only necessary when $\alpha = -\infty $.</p><p>Please check the following <a href="/assets/2015K8009929046_王荣庆_04.pdf">pdf</a>.<br>(Thanks to Rongqing Wang.)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;We provide a formal proof on the correctness of NegaScout, which cannot be found in other places of Web.&lt;/p&gt;
&lt;p&gt;We also find that we can 
      
    
    </summary>
    
    
      <category term="homework" scheme="https://ai-fundamental.github.io/tags/homework/"/>
    
  </entry>
  
  <entry>
    <title>Homework 2 on Search</title>
    <link href="https://ai-fundamental.github.io/2017/Homework%202%20on%20Search/"/>
    <id>https://ai-fundamental.github.io/2017/Homework 2 on Search/</id>
    <published>2017-09-13T08:00:00.000Z</published>
    <updated>2017-10-10T08:22:03.333Z</updated>
    
    <content type="html"><![CDATA[<p>We provide a formal proof on the following properties</p><ul><li>If a heuristic is consistent, it must be admissible. We also give an example heuristic which is admissible, but not consistent.</li><li><code>A*</code> of graph search is <strong>NOT</strong> optimal with <strong>admissible heuristic</strong>.</li></ul><p>For the second property, the course book only says that “<code>A*</code> of graph search is optimal with <strong>consistent heuristic</strong>”. Some students are wondering whether the conclusion that   </p><p><strong> A* of graph search is optimal with admissible heuristic </strong></p><p>is true or not (see the <a href="https://cs.stackexchange.com/questions/23351/optimality-of-a?rq=1" target="_blank" rel="external">page</a>). Here, we show this conclusion is wrong. The key point is that the frontier set in graph search include both the visited and unvisited nodes.</p><p>Please check the following <a href="/assets/main.pdf">pdf</a>.<br>(Thanks to Xingcheng Ruan.)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;We provide a formal proof on the following properties&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If a heuristic is consistent, it must be admissible. We also give an e
      
    
    </summary>
    
    
      <category term="homework" scheme="https://ai-fundamental.github.io/tags/homework/"/>
    
  </entry>
  
  <entry>
    <title>Homework 1 on Search</title>
    <link href="https://ai-fundamental.github.io/2017/Homework%201%20on%20Search/"/>
    <id>https://ai-fundamental.github.io/2017/Homework 1 on Search/</id>
    <published>2017-09-09T08:00:00.000Z</published>
    <updated>2017-10-10T07:37:52.397Z</updated>
    
    <content type="html"><![CDATA[<p>We provide a formal proof on</p><ul><li>The graph separation property in graph search</li><li>The optimality on uniform-cost search</li></ul><p>Please check the following <a href="/assets/2015K8009929017_朱钦霖_01.pdf">pdf</a>.<br>(Thanks to Qinlin Zhu.)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;We provide a formal proof on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The graph separation property in graph search&lt;/li&gt;
&lt;li&gt;The optimality on uniform-cost search&lt;/l
      
    
    </summary>
    
    
      <category term="homework" scheme="https://ai-fundamental.github.io/tags/homework/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to AI Fundamental course at UCAS</title>
    <link href="https://ai-fundamental.github.io/2017/Welcome%20to%20AI%20Fundamental%20course%20at%20UCAS/"/>
    <id>https://ai-fundamental.github.io/2017/Welcome to AI Fundamental course at UCAS/</id>
    <published>2017-09-01T08:00:00.000Z</published>
    <updated>2017-10-10T07:38:14.875Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to AI Fundamental course at <a href="http://www.ucas.ac.cn/" target="_blank" rel="external">UCAS</a></p><p>Thank you for your interest in our materials developed for AI Fundamental course (2017) at University of Chinese Academy of Sciences. At this web site, you will find the following:</p><ul><li>Some lecture slides (mainly for the third part of this course)</li><li>Detailed analysis on some key questions, which are not well addressed in the course book. These questions are usually used as the homework for the students in the course.</li></ul><a id="more"></a><p>The whole course includes the following three parts:<br>Part 1: Search<br>Part 2: Knowledge<br>Part 3: Learning</p><p>The materials for the first two parts are mainly based on <a href="http://aima.cs.berkeley.edu/" target="_blank" rel="external">AIMA</a> (CS 188 at Berkeley) and the <a href="https://www.coursera.org/learn/rengong-zhineng" target="_blank" rel="external">AI course at Taiwan University</a>. The materials for the last part are mainly developed by the instructor himself.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to AI Fundamental course at &lt;a href=&quot;http://www.ucas.ac.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UCAS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thank you for your interest in our materials developed for AI Fundamental course (2017) at University of Chinese Academy of Sciences. At this web site, you will find the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some lecture slides (mainly for the third part of this course)&lt;/li&gt;
&lt;li&gt;Detailed analysis on some key questions, which are not well addressed in the course book. These questions are usually used as the homework for the students in the course.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
